basePath: /api/v1
definitions:
  myservice.CashChangesCreateInput:
    properties:
      comment:
        type: string
      date:
        description: unixmilli
        type: integer
      reason:
        type: string
      session_id:
        type: integer
      total:
        type: number
    required:
    - reason
    type: object
  myservice.CashChangesOutputModel:
    properties:
      comment:
        type: string
      date:
        description: unixmilli
        type: integer
      employee_id:
        type: integer
      id:
        type: integer
      outletID:
        type: integer
      reason:
        type: string
      session_id:
        type: integer
      total:
        type: number
    type: object
  myservice.CategoryCreateInput:
    properties:
      name:
        type: string
    required:
    - name
    type: object
  myservice.CategoryOutputModel:
    properties:
      id:
        type: integer
      name:
        type: string
      outlet_id:
        type: integer
    type: object
  myservice.CategoryUpdateFieldsInput:
    properties:
      name:
        type: string
    type: object
  myservice.DefaultOutputModel:
    properties:
      id:
        type: integer
    type: object
  myservice.EmployeeOutputModel:
    properties:
      id:
        type: integer
      name:
        type: string
      online:
        type: boolean
      outlet_id:
        type: integer
      role:
        type: string
      role_id:
        type: integer
    type: object
  myservice.EmployeeUpdateFieldsInput:
    properties:
      name:
        type: string
      password:
        type: string
      role_id:
        type: integer
    type: object
  myservice.IngredientArrivalInput:
    properties:
      count:
        type: number
      date:
        type: integer
      ingredient_id:
        type: integer
      price:
        type: number
      write_off:
        type: boolean
    type: object
  myservice.IngredientCreateInput:
    properties:
      count:
        type: number
      measure_unit:
        type: integer
      name:
        type: string
      purchase_price:
        type: number
    required:
    - name
    type: object
  myservice.IngredientOutputModel:
    properties:
      count:
        type: number
      id:
        type: integer
      measure_unit:
        type: integer
      name:
        type: string
      outlet_id:
        type: integer
      purchase_price:
        type: number
    type: object
  myservice.IngredientUpdateInput:
    properties:
      count:
        type: number
      measure_unit:
        type: integer
      name:
        type: string
      purchase_price:
        type: number
    type: object
  myservice.IngredientsAddingHistoryCreateInput:
    properties:
      count:
        description: кол-во продукта, который не сходится
        type: number
      date:
        description: unixmilli
        type: integer
      ingredient_id:
        type: integer
      status:
        description: 1 - инвенторизация
        type: integer
      total:
        description: сумма, на которую не сходится
        type: number
    type: object
  myservice.IngredientsAddingHistoryOutputModel:
    properties:
      count:
        description: кол-во продукта, который не сходится
        type: number
      date:
        description: unixmilli
        type: integer
      employee_id:
        description: сотрудник, который делал инветаризацию
        type: integer
      id:
        type: integer
      ingredient_id:
        type: integer
      outlet_id:
        type: integer
      status:
        description: 1 - инвенторизация
        type: integer
      total:
        description: сумма, на которую не сходится
        type: number
    type: object
  myservice.InventoryHistoryCreateInput:
    properties:
      date:
        description: unixmilli
        type: integer
    type: object
  myservice.InventoryHistoryOutputModel:
    properties:
      date:
        description: unixmilli
        type: integer
      employee_id:
        description: сотрудник, который делал инветаризацию
        type: integer
      id:
        type: integer
      outlet_id:
        type: integer
    type: object
  myservice.InventoryListCreateInput:
    properties:
      ingredient_id:
        type: integer
      inventory_history_id:
        type: integer
      new_count:
        type: number
    type: object
  myservice.InventoryListOutputModel:
    properties:
      id:
        type: integer
      ingredient_id:
        type: integer
      inventory_history_id:
        type: integer
      new_count:
        type: number
      old_count:
        type: number
      outletID:
        type: integer
      price:
        type: number
    type: object
  myservice.InvitationCreateOutput:
    properties:
      code:
        type: string
      id:
        type: integer
    type: object
  myservice.InvitationGetActivatedFieldAffiliateOrg:
    properties:
      id:
        type: integer
      name:
        type: string
      outlets:
        items:
          $ref: '#/definitions/myservice.InvitationGetActivatedFieldOutlets'
        type: array
    type: object
  myservice.InvitationGetActivatedFieldOutlets:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  myservice.InvitationGetActivatedOutput:
    properties:
      affiliate_org:
        $ref: '#/definitions/myservice.InvitationGetActivatedFieldAffiliateOrg'
      id:
        description: id инвайта
        type: integer
    type: object
  myservice.InvitationGetNotActivatedOutput:
    properties:
      code:
        description: рандомный код (равен "", если активирован)
        type: string
      expires_in:
        description: во сколько истекает инвайт(равен 0, если активирован)
        type: integer
      id:
        description: id инвайта
        type: integer
    type: object
  myservice.InvitationOutputModel:
    properties:
      affiliate_org_id:
        description: приглашенная организация
        type: integer
      code:
        description: рандомный код (равен "", если активирован)
        type: string
      expires_in:
        description: во сколько истекает инвайт(равен 0, если активирован)
        type: integer
      id:
        description: id инвайта
        type: integer
    type: object
  myservice.OrderInfoOutputModel:
    properties:
      date:
        type: integer
      employee_name:
        type: string
      id:
        type: integer
      is_delete:
        type: boolean
      outlet_id:
        type: integer
      pay_type:
        type: integer
      session_id:
        type: integer
    type: object
  myservice.OrderListCreateInput:
    properties:
      count:
        type: integer
      order_info_id:
        type: integer
      product_id:
        type: integer
      product_name:
        type: string
      product_price:
        type: number
      session_id:
        type: integer
    type: object
  myservice.OrderListOutputModel:
    properties:
      count:
        type: integer
      id:
        type: integer
      order_info_id:
        type: integer
      outlet_id:
        type: integer
      product_id:
        type: integer
      product_name:
        type: string
      product_price:
        type: number
      session_id:
        type: integer
    type: object
  myservice.OrdersInfoCreateInput:
    properties:
      date:
        type: integer
      employee_name:
        type: string
      pay_type:
        type: integer
      session_id:
        type: integer
    required:
    - employee_name
    type: object
  myservice.OutletCreateInput:
    properties:
      name:
        type: string
    required:
    - name
    type: object
  myservice.PWICreateInput:
    properties:
      count_take_for_sell:
        type: number
      ingredient_id:
        type: integer
      product_id:
        type: integer
    type: object
  myservice.PWIOutputModel:
    properties:
      count_take_for_sell:
        type: number
      id:
        type: integer
      ingredient_id:
        type: integer
      outlet_id:
        type: integer
      product_id:
        type: integer
    type: object
  myservice.PWIUpdateFields:
    properties:
      count_take_for_sell:
        type: number
      product_id:
        type: integer
    type: object
  myservice.ProductCreateInput:
    properties:
      amount:
        type: integer
      barcode:
        type: integer
      category_id:
        type: integer
      name:
        type: string
      photo:
        type: string
      price:
        type: number
      product_name_kkt:
        type: string
      seller_percent:
        type: number
    type: object
  myservice.ProductOutputModel:
    properties:
      amount:
        type: integer
      barcode:
        type: integer
      category_id:
        type: integer
      id:
        type: integer
      name:
        type: string
      outlet_id:
        type: integer
      photo:
        type: string
      price:
        type: number
      product_name_kkt:
        type: string
      seller_percent:
        type: number
    type: object
  myservice.ProductUpdateInput:
    properties:
      amount:
        type: integer
      barcode:
        type: integer
      category_id:
        type: integer
      name:
        type: string
      photo:
        type: string
      price:
        type: number
      product_name_kkt:
        type: string
      seller_percent:
        type: number
    type: object
  myservice.SessionOpenOrCloseOutput:
    properties:
      employee_id:
        type: integer
      id:
        type: integer
    type: object
  myservice.SessionOutputModel:
    properties:
      bank_earned:
        type: number
      cash_close:
        type: number
      cash_earned:
        type: number
      cash_open:
        type: number
      date_close:
        description: unixmilli
        type: integer
      date_open:
        description: unixmilli
        type: integer
      employee_id:
        type: integer
      id:
        type: integer
      number_of_receipts:
        type: integer
      outlet_id:
        type: integer
    type: object
  myservice.SessionsOpenOrCloseInput:
    properties:
      action:
        description: '"open" or "close"'
        type: string
      bank_earned:
        type: number
      cash:
        type: number
      cash_earned:
        type: number
      date:
        type: integer
    required:
    - action
    type: object
  myservice.SignInEmployeeInput:
    properties:
      id:
        type: integer
      password:
        type: string
    required:
    - password
    type: object
  myservice.SignInEmployeeOutput:
    properties:
      affiliate:
        description: является ли организация филиалом
        type: boolean
      token:
        type: string
    type: object
  myservice.SignInOrgInput:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  myservice.SignInOrgOutput:
    properties:
      token:
        type: string
    type: object
  myservice.SignUpEmployeeInput:
    properties:
      name:
        type: string
      password:
        type: string
      role_id:
        type: integer
    required:
    - name
    - password
    type: object
  myservice.SignUpOrgInput:
    properties:
      email:
        type: string
      invite_code:
        type: string
      name:
        type: string
      password:
        type: string
    required:
    - email
    - name
    - password
    type: object
  myservice.outletOutputModel:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  myservice.serviceError:
    properties:
      code:
        type: integer
      error:
        type: string
    type: object
info:
  contact:
    email: razmolodinivan@mail.ru
  title: POS-Ninja Backend API
  version: 0.1-alpha
paths:
  /auth/confirmCode:
    get:
      parameters:
      - in: query
        name: code
        required: true
        type: string
      responses:
        "200":
          description: возвращает пустой объект
          schema:
            type: object
      summary: Проверка кода подтверждения
  /auth/sendCode:
    get:
      parameters:
      - description: 'адрес на который будет отправлено письмо (например: email@exmp.ru)'
        in: query
        name: email
        type: string
      responses:
        "200":
          description: возвращает пустой объект
          schema:
            type: object
      summary: Отправка кода подтверждения почты
  /auth/signIn.Employee:
    post:
      consumes:
      - application/json
      description: Метод позволяет войти в аккаунт сотрудника. Работает только с токеном
        огранизации.
      parameters:
      - description: Объект для входа в огранизацию.
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/myservice.SignInEmployeeInput'
      produces:
      - application/json
      responses:
        "200":
          description: Возвращает `jwt токен` при успешной авторизации
          schema:
            $ref: '#/definitions/myservice.SignInEmployeeOutput'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/myservice.serviceError'
      summary: Вход для сотрудника
  /auth/signIn.Org:
    post:
      consumes:
      - application/json
      description: Метод позволяет войти в аккаунт организации.
      parameters:
      - description: Объект для входа в огранизацию.
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/myservice.SignInOrgInput'
      produces:
      - application/json
      responses:
        "200":
          description: Возвращает `jwt токен` при успешной авторизации
          schema:
            $ref: '#/definitions/myservice.SignInOrgOutput'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/myservice.serviceError'
      summary: Вход для организации
  /auth/signUp.Employee:
    post:
      consumes:
      - application/json
      description: Метод позволяет зарегистрировать ссотрудника. Работает только с
        токеном организации.
      parameters:
      - description: Объект для регитсрации сотрудника.
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/myservice.SignUpEmployeeInput'
      produces:
      - application/json
      responses:
        "201":
          description: Возвращаемый объект при регистрации сотрудника
          schema:
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/myservice.serviceError'
      summary: Регистрация сотрудника
  /auth/signUp.Org:
    post:
      consumes:
      - application/json
      description: Метод позволяет зарегистрировать организацию
      parameters:
      - description: Объект для регитсрации огранизации.
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/myservice.SignUpOrgInput'
      produces:
      - application/json
      responses:
        "201":
          description: Возвращаемый объект при регистрации огранизации
          schema:
            type: object
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/myservice.serviceError'
      summary: Регистрация организации
  /cashChanges:
    get:
      consumes:
      - application/json
      parameters:
      - description: in unixmilli
        in: query
        name: end
        type: integer
      - description: in unixmilli
        in: query
        name: start
        type: integer
      produces:
      - application/json
      responses:
        "201":
          description: список изменений баланса кассы
          schema:
            items:
              $ref: '#/definitions/myservice.CashChangesOutputModel'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/myservice.serviceError'
      summary: Получить всю информацию о снятии\вкладе денежных средств (в точке)
    post:
      consumes:
      - application/json
      description: параметр `date` указывается в формате unixmilli
      parameters:
      - description: Принимаемый объект
        in: body
        name: type
        schema:
          $ref: '#/definitions/myservice.CashChangesCreateInput'
      produces:
      - application/json
      responses:
        "201":
          description: возвращает id созданной записи
          schema:
            $ref: '#/definitions/myservice.DefaultOutputModel'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/myservice.serviceError'
      summary: Добавить информацию о снятии\вкладе денежных средств
  /cashChanges.CurrentSession:
    get:
      consumes:
      - application/json
      description: берет последнюю открытую сессию (т.е. текущую сессию) сотрудника
        и по этой сессии ищет записи об изменении баланса кассы
      produces:
      - application/json
      responses:
        "201":
          description: список изменений баланса кассы (по текущей сессии)
          schema:
            items:
              $ref: '#/definitions/myservice.CashChangesOutputModel'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/myservice.serviceError'
      summary: Получить информацию о снятии\вкладе денежных средств, которые были
        воспроизведены в текущей сессии (в точке)
  /categories:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: Возвращает массив категорий
          schema:
            items:
              $ref: '#/definitions/myservice.CategoryOutputModel'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/myservice.serviceError'
      summary: Список всех категорий организации для владельца и точки для админа/кассира
    post:
      consumes:
      - application/json
      parameters:
      - description: Принимаемый объект
        in: body
        name: type
        schema:
          $ref: '#/definitions/myservice.CategoryCreateInput'
      responses:
        "201":
          description: возвращает id созданной записи
          schema:
            $ref: '#/definitions/myservice.DefaultOutputModel'
      summary: Добавить новую категорию к точке
  /categories/:id:
    delete:
      description: Метод позволяет удалить категоирю из точки
      produces:
      - application/json
      responses:
        "200":
          description: возвращает пустой объект
          schema:
            type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/myservice.serviceError'
      summary: Удалить категоирю из точки
    put:
      consumes:
      - application/json
      parameters:
      - description: Принимаемый объект
        in: body
        name: type
        schema:
          $ref: '#/definitions/myservice.CategoryUpdateFieldsInput'
      produces:
      - application/json
      responses:
        "200":
          description: возвращает пустой объект
          schema:
            type: object
      summary: Обновить поля категории
  /employees:
    get:
      description: Метод позволяет получить список всех сотрудников организации
      produces:
      - application/json
      responses:
        "200":
          description: Возвращает массив сотрудников
          schema:
            items:
              $ref: '#/definitions/myservice.EmployeeOutputModel'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/myservice.serviceError'
      summary: Список всех сотрудников организации
  /employees/:id:
    delete:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: возвращает пустой объект
          schema:
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/myservice.serviceError'
      summary: Позволяет удалить сотрудника
    put:
      consumes:
      - application/json
      parameters:
      - description: Принимаемый объект
        in: body
        name: type
        schema:
          $ref: '#/definitions/myservice.EmployeeUpdateFieldsInput'
      produces:
      - application/json
      responses:
        "200":
          description: возвращает пустой объект
          schema:
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/myservice.serviceError'
      summary: Позволяет обновить поля сотрудника
  /ingredients:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: возвращает все ингредиенты текущей точки
          schema:
            items:
              $ref: '#/definitions/myservice.IngredientOutputModel'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/myservice.serviceError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/myservice.serviceError'
      summary: Получить все ингредиенты точки
    post:
      consumes:
      - application/json
      parameters:
      - description: Принимаемый объект
        in: body
        name: type
        schema:
          $ref: '#/definitions/myservice.IngredientCreateInput'
      produces:
      - application/json
      responses:
        "201":
          description: возвращает id созданной записи
          schema:
            $ref: '#/definitions/myservice.DefaultOutputModel'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/myservice.serviceError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/myservice.serviceError'
      summary: Добавить новый ингредиент в точку
    put:
      consumes:
      - application/json
      parameters:
      - description: Обновляемые поля
        in: body
        name: type
        schema:
          $ref: '#/definitions/myservice.IngredientUpdateInput'
      produces:
      - application/json
      responses:
        "200":
          description: возвращает пустой объект
          schema:
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/myservice.serviceError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/myservice.serviceError'
      summary: Обновить ингредиент
  /ingredients.Arrival:
    post:
      consumes:
      - application/json
      parameters:
      - description: Принимаемый объект
        in: body
        name: type
        schema:
          items:
            $ref: '#/definitions/myservice.IngredientArrivalInput'
          type: array
      produces:
      - application/json
      responses:
        "201":
          description: возвращает пустой объект
          schema:
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/myservice.serviceError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/myservice.serviceError'
      summary: Поступление ингредиентов в точку
  /ingredients.History:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: возвращаемый объект
          schema:
            items:
              $ref: '#/definitions/myservice.IngredientsAddingHistoryOutputModel'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/myservice.serviceError'
      summary: Получить историю добавления ингредиентов
    post:
      consumes:
      - application/json
      parameters:
      - description: Принимаемый объект
        in: body
        name: type
        schema:
          $ref: '#/definitions/myservice.IngredientsAddingHistoryCreateInput'
      produces:
      - application/json
      responses:
        "201":
          description: возвращает id созданной записи
          schema:
            $ref: '#/definitions/myservice.DefaultOutputModel'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/myservice.serviceError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/myservice.serviceError'
      summary: Добавить новый отчёт об ингредиентах
  /ingredients/:id:
    delete:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "201":
          description: возвращает пустой объект
          schema:
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/myservice.serviceError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/myservice.serviceError'
      summary: Удаляет ингридиент из точки
  /inventoryHistory:
    get:
      consumes:
      - application/json
      parameters:
      - description: in unixmilli
        in: query
        name: end
        type: integer
      - description: in unixmilli
        in: query
        name: start
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: возвращаемый объект
          schema:
            items:
              $ref: '#/definitions/myservice.InventoryHistoryOutputModel'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/myservice.serviceError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/myservice.serviceError'
      summary: Получить всю историю инвернтаризации
    post:
      consumes:
      - application/json
      parameters:
      - description: Принимаемый объект
        in: body
        name: type
        schema:
          $ref: '#/definitions/myservice.InventoryHistoryCreateInput'
      produces:
      - application/json
      responses:
        "201":
          description: возвращает id созданной записи
          schema:
            $ref: '#/definitions/myservice.DefaultOutputModel'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/myservice.serviceError'
      summary: Добавить новую историю инвентаризации
  /inventoryList:
    get:
      consumes:
      - application/json
      parameters:
      - in: query
        name: inventoryHistoryID
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: возвращаемый объект
          schema:
            items:
              $ref: '#/definitions/myservice.InventoryListOutputModel'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/myservice.serviceError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/myservice.serviceError'
      summary: Получить всю историю инвернтаризации
    post:
      consumes:
      - application/json
      parameters:
      - description: Принимаемый объект
        in: body
        name: type
        schema:
          $ref: '#/definitions/myservice.InventoryListCreateInput'
      produces:
      - application/json
      responses:
        "201":
          description: возвращает id созданной записи
          schema:
            $ref: '#/definitions/myservice.DefaultOutputModel'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/myservice.serviceError'
      summary: Добавить InventoryList
  /invites:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: возвращамый объект
          schema:
            items:
              $ref: '#/definitions/myservice.InvitationOutputModel'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/myservice.serviceError'
      summary: Получить все приглашения организации
    post:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "201":
          description: возвращает id созданной записи и код приглашения
          schema:
            $ref: '#/definitions/myservice.InvitationCreateOutput'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/myservice.serviceError'
      summary: Создать код приглашения
  /invites.NotActivated:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: возвращамый объект
          schema:
            items:
              $ref: '#/definitions/myservice.InvitationGetActivatedOutput'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/myservice.serviceError'
      summary: Получить активированные приглашения организации
  /invites/:id:
    delete:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: возвращамый объект
          schema:
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/myservice.serviceError'
      summary: Удалить приглашение
  /orderInfo:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: список завершенных заказов
          schema:
            items:
              $ref: '#/definitions/myservice.OrderInfoOutputModel'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/myservice.serviceError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/myservice.serviceError'
      summary: Получить список завершенных заказов (orderInfo)
    post:
      consumes:
      - application/json
      parameters:
      - description: Принимаемый объект
        in: body
        name: type
        schema:
          $ref: '#/definitions/myservice.OrdersInfoCreateInput'
      responses:
        "201":
          description: возвращает id созданного order info
          schema:
            $ref: '#/definitions/myservice.DefaultOutputModel'
      summary: Добавить orderInfo (список завершенных заказов)
  /orderInfo/:id:
    delete:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: возвращает пустой объект
          schema:
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/myservice.serviceError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/myservice.serviceError'
      summary: Удалить orderInfo в точке по его id
    post:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: возвращает пустой объект
          schema:
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/myservice.serviceError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/myservice.serviceError'
      summary: Восстановить orderInfo в точке по его id
  /orderList:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: список orderList точки
          schema:
            items:
              $ref: '#/definitions/myservice.OrderListOutputModel'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/myservice.serviceError'
      summary: Получить список orderList точки (список продутктов из которых состоит
        заказ)
    post:
      consumes:
      - application/json
      parameters:
      - description: Принимаемый объект
        in: body
        name: type
        schema:
          $ref: '#/definitions/myservice.OrderListCreateInput'
      produces:
      - application/json
      responses:
        "201":
          description: возвращает id созданной записи
          schema:
            $ref: '#/definitions/myservice.DefaultOutputModel'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/myservice.serviceError'
      summary: Добавить orderList (список продутктов из которых состоит заказ)
  /outlets:
    get:
      description: Метод позволяет получить список всех торговых точек
      produces:
      - application/json
      responses:
        "200":
          description: Возвращает массив торговых точек
          schema:
            items:
              $ref: '#/definitions/myservice.outletOutputModel'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/myservice.serviceError'
      summary: Список всех торговых точек (токен организации)
    post:
      consumes:
      - application/json
      description: Метод позволяет добавить торговую точку
      parameters:
      - description: Объект для добавления торговой точки.
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/myservice.OutletCreateInput'
      produces:
      - application/json
      responses:
        "200":
          description: возвращает id созданной записи
          schema:
            $ref: '#/definitions/myservice.DefaultOutputModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/myservice.serviceError'
      summary: Добавить торговую точку (токен юзера)
  /outlets/:id:
    delete:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: возвращает пустой объект
          schema:
            type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/myservice.serviceError'
      summary: Удалить точку (токен юзера)
    put:
      consumes:
      - application/json
      parameters:
      - description: Обновляемые поля
        in: body
        name: json
        schema:
          $ref: '#/definitions/myservice.OutletCreateInput'
      produces:
      - application/json
      responses:
        "200":
          description: возвращает пустой объект
          schema:
            type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/myservice.serviceError'
      summary: Обновить точку (токен юзера)
  /products:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: возвращает список пордуктов точки
          schema:
            items:
              $ref: '#/definitions/myservice.ProductOutputModel'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/myservice.serviceError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/myservice.serviceError'
      summary: Список продуктов точки
    post:
      consumes:
      - application/json
      parameters:
      - description: Принимаемый объект
        in: body
        name: type
        schema:
          $ref: '#/definitions/myservice.ProductCreateInput'
      produces:
      - application/json
      responses:
        "201":
          description: возвращает id созданной записи
          schema:
            $ref: '#/definitions/myservice.DefaultOutputModel'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/myservice.serviceError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/myservice.serviceError'
      summary: Добавить новый продукт в точку
  /products/:id:
    delete:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: возвращает пустой объект
          schema:
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/myservice.serviceError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/myservice.serviceError'
      summary: Удалить продукт в точке
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: возвращает один продукт из точки
          schema:
            $ref: '#/definitions/myservice.ProductOutputModel'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/myservice.serviceError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/myservice.serviceError'
      summary: Продукт точки
    put:
      consumes:
      - application/json
      parameters:
      - description: Обновляемые поля
        in: body
        name: type
        schema:
          $ref: '#/definitions/myservice.ProductUpdateInput'
      produces:
      - application/json
      responses:
        "200":
          description: возвращает пустой объект
          schema:
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/myservice.serviceError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/myservice.serviceError'
      summary: Обновить продукт в точке
  /pwis:
    get:
      consumes:
      - application/json
      parameters:
      - in: query
        name: product_id
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Список связей продуктов и ингредиентов точки
          schema:
            items:
              $ref: '#/definitions/myservice.PWIOutputModel'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/myservice.serviceError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/myservice.serviceError'
      summary: Получить список связей продуктов и ингредиентов в точке
    post:
      consumes:
      - application/json
      parameters:
      - description: Принимаемый объект
        in: body
        name: type
        schema:
          $ref: '#/definitions/myservice.PWICreateInput'
      produces:
      - application/json
      responses:
        "201":
          description: возвращает id созданной записи
          schema:
            $ref: '#/definitions/myservice.DefaultOutputModel'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/myservice.serviceError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/myservice.serviceError'
      summary: Добавить связь продукта и ингридиента в точку
  /pwis/:id:
    delete:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: пустой объект
          schema:
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/myservice.serviceError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/myservice.serviceError'
      summary: Удалить связь из точки
    put:
      consumes:
      - application/json
      parameters:
      - description: Обновляемые поля
        in: body
        name: type
        schema:
          $ref: '#/definitions/myservice.PWIUpdateFields'
      responses:
        "200":
          description: возвращает пустой объект
          schema:
            type: object
      summary: Обновить связь
  /sessions:
    get:
      consumes:
      - application/json
      description: Метод позволяет получить список всех сессий точки
      parameters:
      - description: in unixmilli
        in: query
        name: end
        type: integer
      - description: in unixmilli
        in: query
        name: start
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Возвращает массив сессий точки
          schema:
            items:
              $ref: '#/definitions/myservice.SessionOutputModel'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/myservice.serviceError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/myservice.serviceError'
      summary: Список всех сессий точки
    post:
      description: |-
        Открывает сессию с id указанным в jwt токен.
        - Поле `action` принимает два параметра `open` (для открытия сессии) и `close` (для закрытия сессии)
      parameters:
      - description: Принимаемый объект
        in: body
        name: type
        schema:
          $ref: '#/definitions/myservice.SessionsOpenOrCloseInput'
      responses:
        "201":
          description: возвращает id созданной записи
          schema:
            $ref: '#/definitions/myservice.SessionOpenOrCloseOutput'
      summary: Открыть или закрыть сессию в точке
  /sessions.Last:
    get:
      consumes:
      - application/json
      description: Метод позволяет получить последнюю сессию торговой точки (не важно,
        открытая или закрытая), к которой привязан jwt токен
      produces:
      - application/json
      responses:
        "200":
          description: Возвращает последнюю закрытую сессию точки продаж
          schema:
            $ref: '#/definitions/myservice.SessionOutputModel'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/myservice.serviceError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/myservice.serviceError'
      summary: Последняя сессия торговой точки (к которой привязан jwt токен)
  /sessions.Last.Closed:
    get:
      consumes:
      - application/json
      description: Метод позволяет получить последнюю сессию торговой точки, к которой
        привязан jwt токен
      produces:
      - application/json
      responses:
        "200":
          description: Возвращает последнюю закрытую сессию точки продаж
          schema:
            $ref: '#/definitions/myservice.SessionOutputModel'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/myservice.serviceError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/myservice.serviceError'
      summary: Последняя закрытая сессия торговой точки (к которой привязан jwt токен)
  /sessions.Last.Me:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: Возвращает последнюю сессию текущего юзера
          schema:
            $ref: '#/definitions/myservice.SessionOutputModel'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/myservice.serviceError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/myservice.serviceError'
      summary: Последняя сессия текущего юзера (к которой привязан jwt токен)
swagger: "2.0"

{
    "swagger": "2.0",
    "info": {
        "title": "POS-Ninja Backend API",
        "contact": {
            "email": "razmolodinivan@mail.ru"
        },
        "version": "0.1-alpha"
    },
    "basePath": "/api/v1",
    "paths": {
        "/auth/signIn": {
            "post": {
                "description": "Метод позволяет войти в аккаунт организации, либо сотрудника.\nДля входа сотрудника требуется `jwt токен` соотвествующей ему огранизации.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Вход для организации, либо сотрудника",
                "parameters": [
                    {
                        "type": "string",
                        "description": "`org`(default) or `employee`",
                        "name": "type",
                        "in": "query"
                    },
                    {
                        "description": "Объект для входа в огранизацию. Обязательные поля:`email`, `password`",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/myservice.signInOrgInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Возвращает `jwt токен` при успешной авторизации",
                        "schema": {
                            "$ref": "#/definitions/myservice.signInOrgOutput"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/myservice.myServiceError"
                        }
                    }
                }
            }
        },
        "/auth/signUp": {
            "post": {
                "description": "Метод позволяет зарегистрировать организацию или сотрудника данной огранизации.\nРегистрация сотрудника возможна только с `jwt токеном` организации.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Регистрация организации, либо сотрудника",
                "parameters": [
                    {
                        "type": "string",
                        "description": "`org`(default) or `employee`",
                        "name": "type",
                        "in": "query"
                    },
                    {
                        "description": "Объект для регитсрации огранизации. Обязательные поля:`email`, `password`",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/myservice.signUpOrgInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Возвращаемый объект при регистрации огранизации",
                        "schema": {
                            "$ref": "#/definitions/myservice.signUpOrgOutput"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/myservice.myServiceError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "myservice.myServiceError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "error": {
                    "type": "string"
                }
            }
        },
        "myservice.signInOrgInput": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "myservice.signInOrgOutput": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "myservice.signUpOrgInput": {
            "type": "object",
            "required": [
                "email",
                "name",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "myservice.signUpOrgOutput": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                }
            }
        }
    }
}
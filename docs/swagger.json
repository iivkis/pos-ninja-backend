{
    "swagger": "2.0",
    "info": {
        "title": "POS-Ninja Backend API",
        "contact": {
            "email": "razmolodinivan@mail.ru"
        },
        "version": "0.1-alpha"
    },
    "basePath": "/api/v1",
    "paths": {
        "/auth/confirmCode": {
            "get": {
                "summary": "Проверка кода подтверждения",
                "parameters": [
                    {
                        "type": "string",
                        "name": "code",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "возвращает пустой объект",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/auth/sendCode": {
            "get": {
                "summary": "Отправка кода подтверждения почты",
                "parameters": [
                    {
                        "type": "string",
                        "description": "адрес на который будет отправлено письмо (например: email@exmp.ru)",
                        "name": "email",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "возвращает пустой объект",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/auth/signIn.Employee": {
            "post": {
                "description": "Метод позволяет войти в аккаунт сотрудника. Работает только с токеном огранизации.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Вход для сотрудника",
                "parameters": [
                    {
                        "description": "Объект для входа в огранизацию.",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/myservice.SignInEmployeeInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Возвращает `jwt токен` при успешной авторизации",
                        "schema": {
                            "$ref": "#/definitions/myservice.SignInEmployeeOutput"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/myservice.serviceError"
                        }
                    }
                }
            }
        },
        "/auth/signIn.Org": {
            "post": {
                "description": "Метод позволяет войти в аккаунт организации.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Вход для организации",
                "parameters": [
                    {
                        "description": "Объект для входа в огранизацию.",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/myservice.SignInOrgInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Возвращает `jwt токен` при успешной авторизации",
                        "schema": {
                            "$ref": "#/definitions/myservice.SignInOrgOutput"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/myservice.serviceError"
                        }
                    }
                }
            }
        },
        "/auth/signUp.Employee": {
            "post": {
                "description": "Метод позволяет зарегистрировать ссотрудника. Работает только с токеном организации.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Регистрация сотрудника",
                "parameters": [
                    {
                        "description": "Объект для регитсрации сотрудника.",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/myservice.SignUpEmployeeInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Возвращаемый объект при регистрации сотрудника",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/myservice.serviceError"
                        }
                    }
                }
            }
        },
        "/auth/signUp.Org": {
            "post": {
                "description": "Метод позволяет зарегистрировать организацию",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Регистрация организации",
                "parameters": [
                    {
                        "description": "Объект для регитсрации огранизации.",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/myservice.SignUpOrgInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Возвращаемый объект при регистрации огранизации",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/myservice.serviceError"
                        }
                    }
                }
            }
        },
        "/cashChanges": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Получить всю информацию о снятии\\вкладе денежных средств (в точке)",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "in unixmilli",
                        "name": "end",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "in unixmilli",
                        "name": "start",
                        "in": "query"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "список изменений баланса кассы",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/myservice.CashChangesOutputModel"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/myservice.serviceError"
                        }
                    }
                }
            },
            "post": {
                "description": "параметр `date` указывается в формате unixmilli",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Добавить информацию о снятии\\вкладе денежных средств",
                "parameters": [
                    {
                        "description": "Принимаемый объект",
                        "name": "type",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/myservice.CashChangesCreateInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "возвращает id созданной записи",
                        "schema": {
                            "$ref": "#/definitions/myservice.DefaultOutputModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/myservice.serviceError"
                        }
                    }
                }
            }
        },
        "/cashChanges.CurrentSession": {
            "get": {
                "description": "берет последнюю открытую сессию (т.е. текущую сессию) сотрудника и по этой сессии ищет записи об изменении баланса кассы",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Получить информацию о снятии\\вкладе денежных средств, которые были воспроизведены в текущей сессии (в точке)",
                "responses": {
                    "201": {
                        "description": "список изменений баланса кассы (по текущей сессии)",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/myservice.CashChangesOutputModel"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/myservice.serviceError"
                        }
                    }
                }
            }
        },
        "/categories": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Список всех категорий организации для владельца и точки для админа/кассира",
                "responses": {
                    "200": {
                        "description": "Возвращает массив категорий",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/myservice.CategoryOutputModel"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/myservice.serviceError"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "summary": "Добавить новую категорию к точке",
                "parameters": [
                    {
                        "description": "Принимаемый объект",
                        "name": "type",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/myservice.CategoryCreateInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "возвращает id созданной записи",
                        "schema": {
                            "$ref": "#/definitions/myservice.DefaultOutputModel"
                        }
                    }
                }
            }
        },
        "/categories/:id": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Обновить поля категории",
                "parameters": [
                    {
                        "description": "Принимаемый объект",
                        "name": "type",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/myservice.CategoryUpdateFieldsInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "возвращает пустой объект",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            },
            "delete": {
                "description": "Метод позволяет удалить категоирю из точки",
                "produces": [
                    "application/json"
                ],
                "summary": "Удалить категоирю из точки",
                "responses": {
                    "200": {
                        "description": "возвращает пустой объект",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/myservice.serviceError"
                        }
                    }
                }
            }
        },
        "/employees": {
            "get": {
                "description": "Метод позволяет получить список всех сотрудников организации",
                "produces": [
                    "application/json"
                ],
                "summary": "Список всех сотрудников организации",
                "responses": {
                    "200": {
                        "description": "Возвращает массив сотрудников",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/myservice.EmployeeOutputModel"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/myservice.serviceError"
                        }
                    }
                }
            }
        },
        "/employees/:id": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Позволяет обновить поля сотрудника",
                "parameters": [
                    {
                        "description": "Принимаемый объект",
                        "name": "type",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/myservice.EmployeeUpdateFieldsInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "возвращает пустой объект",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/myservice.serviceError"
                        }
                    }
                }
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Позволяет удалить сотрудника",
                "responses": {
                    "200": {
                        "description": "возвращает пустой объект",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/myservice.serviceError"
                        }
                    }
                }
            }
        },
        "/ingredients": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Получить все ингредиенты точки",
                "responses": {
                    "200": {
                        "description": "возвращает все ингредиенты текущей точки",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/myservice.IngredientOutputModel"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/myservice.serviceError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/myservice.serviceError"
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Обновить ингредиент",
                "parameters": [
                    {
                        "description": "Обновляемые поля",
                        "name": "type",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/myservice.IngredientUpdateInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "возвращает пустой объект",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/myservice.serviceError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/myservice.serviceError"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Добавить новый ингредиент в точку",
                "parameters": [
                    {
                        "description": "Принимаемый объект",
                        "name": "type",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/myservice.IngredientCreateInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "возвращает id созданной записи",
                        "schema": {
                            "$ref": "#/definitions/myservice.DefaultOutputModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/myservice.serviceError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/myservice.serviceError"
                        }
                    }
                }
            }
        },
        "/ingredients.Arrival": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Поступление ингредиентов в точку",
                "parameters": [
                    {
                        "description": "Принимаемый объект",
                        "name": "type",
                        "in": "body",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/myservice.IngredientArrivalInput"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "возвращает пустой объект",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/myservice.serviceError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/myservice.serviceError"
                        }
                    }
                }
            }
        },
        "/ingredients.History": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Получить историю добавления ингредиентов",
                "responses": {
                    "200": {
                        "description": "возвращаемый объект",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/myservice.IngredientsAddingHistoryOutputModel"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/myservice.serviceError"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Добавить новый отчёт об ингредиентах",
                "parameters": [
                    {
                        "description": "Принимаемый объект",
                        "name": "type",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/myservice.IngredientsAddingHistoryCreateInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "возвращает id созданной записи",
                        "schema": {
                            "$ref": "#/definitions/myservice.DefaultOutputModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/myservice.serviceError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/myservice.serviceError"
                        }
                    }
                }
            }
        },
        "/ingredients/:id": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Удаляет ингридиент из точки",
                "responses": {
                    "201": {
                        "description": "возвращает пустой объект",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/myservice.serviceError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/myservice.serviceError"
                        }
                    }
                }
            }
        },
        "/inventoryHistory": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Получить всю историю инвернтаризации",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "in unixmilli",
                        "name": "end",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "in unixmilli",
                        "name": "start",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "возвращаемый объект",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/myservice.InventoryHistoryOutputModel"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/myservice.serviceError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/myservice.serviceError"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Добавить новую историю инвентаризации",
                "parameters": [
                    {
                        "description": "Принимаемый объект",
                        "name": "type",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/myservice.InventoryHistoryCreateInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "возвращает id созданной записи",
                        "schema": {
                            "$ref": "#/definitions/myservice.DefaultOutputModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/myservice.serviceError"
                        }
                    }
                }
            }
        },
        "/inventoryList": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Получить всю историю инвернтаризации",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "inventoryHistoryID",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "возвращаемый объект",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/myservice.InventoryListOutputModel"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/myservice.serviceError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/myservice.serviceError"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Добавить InventoryList",
                "parameters": [
                    {
                        "description": "Принимаемый объект",
                        "name": "type",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/myservice.InventoryListCreateInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "возвращает id созданной записи",
                        "schema": {
                            "$ref": "#/definitions/myservice.DefaultOutputModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/myservice.serviceError"
                        }
                    }
                }
            }
        },
        "/invites": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Получить все приглашения организации",
                "responses": {
                    "200": {
                        "description": "возвращамый объект",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/myservice.InvitationOutputModel"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/myservice.serviceError"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Создать код приглашения",
                "responses": {
                    "201": {
                        "description": "возвращает id созданной записи и код приглашения",
                        "schema": {
                            "$ref": "#/definitions/myservice.InvitationCreateOutput"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/myservice.serviceError"
                        }
                    }
                }
            }
        },
        "/invites.NotActivated": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Получить активированные приглашения организации",
                "responses": {
                    "200": {
                        "description": "возвращамый объект",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/myservice.InvitationGetActivatedOutput"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/myservice.serviceError"
                        }
                    }
                }
            }
        },
        "/invites/:id": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Удалить приглашение",
                "responses": {
                    "200": {
                        "description": "возвращамый объект",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/myservice.serviceError"
                        }
                    }
                }
            }
        },
        "/orderInfo": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Получить список завершенных заказов (orderInfo)",
                "responses": {
                    "200": {
                        "description": "список завершенных заказов",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/myservice.OrderInfoOutputModel"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/myservice.serviceError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/myservice.serviceError"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "summary": "Добавить orderInfo (список завершенных заказов)",
                "parameters": [
                    {
                        "description": "Принимаемый объект",
                        "name": "type",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/myservice.OrdersInfoCreateInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "возвращает id созданного order info",
                        "schema": {
                            "$ref": "#/definitions/myservice.DefaultOutputModel"
                        }
                    }
                }
            }
        },
        "/orderInfo/:id": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Восстановить orderInfo в точке по его id",
                "responses": {
                    "200": {
                        "description": "возвращает пустой объект",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/myservice.serviceError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/myservice.serviceError"
                        }
                    }
                }
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Удалить orderInfo в точке по его id",
                "responses": {
                    "200": {
                        "description": "возвращает пустой объект",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/myservice.serviceError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/myservice.serviceError"
                        }
                    }
                }
            }
        },
        "/orderList": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Получить список orderList точки (список продутктов из которых состоит заказ)",
                "responses": {
                    "200": {
                        "description": "список orderList точки",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/myservice.OrderListOutputModel"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/myservice.serviceError"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Добавить orderList (список продутктов из которых состоит заказ)",
                "parameters": [
                    {
                        "description": "Принимаемый объект",
                        "name": "type",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/myservice.OrderListCreateInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "возвращает id созданной записи",
                        "schema": {
                            "$ref": "#/definitions/myservice.DefaultOutputModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/myservice.serviceError"
                        }
                    }
                }
            }
        },
        "/outlets": {
            "get": {
                "description": "Метод позволяет получить список всех торговых точек",
                "produces": [
                    "application/json"
                ],
                "summary": "Список всех торговых точек (токен организации)",
                "responses": {
                    "200": {
                        "description": "Возвращает массив торговых точек",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/myservice.outletOutputModel"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/myservice.serviceError"
                        }
                    }
                }
            },
            "post": {
                "description": "Метод позволяет добавить торговую точку",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Добавить торговую точку (токен юзера)",
                "parameters": [
                    {
                        "description": "Объект для добавления торговой точки.",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/myservice.OutletCreateInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "возвращает id созданной записи",
                        "schema": {
                            "$ref": "#/definitions/myservice.DefaultOutputModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/myservice.serviceError"
                        }
                    }
                }
            }
        },
        "/outlets/:id": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Обновить точку (токен юзера)",
                "parameters": [
                    {
                        "description": "Обновляемые поля",
                        "name": "json",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/myservice.OutletCreateInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "возвращает пустой объект",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/myservice.serviceError"
                        }
                    }
                }
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Удалить точку (токен юзера)",
                "responses": {
                    "200": {
                        "description": "возвращает пустой объект",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/myservice.serviceError"
                        }
                    }
                }
            }
        },
        "/products": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Список продуктов точки",
                "responses": {
                    "200": {
                        "description": "возвращает список пордуктов точки",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/myservice.ProductOutputModel"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/myservice.serviceError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/myservice.serviceError"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Добавить новый продукт в точку",
                "parameters": [
                    {
                        "description": "Принимаемый объект",
                        "name": "type",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/myservice.ProductCreateInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "возвращает id созданной записи",
                        "schema": {
                            "$ref": "#/definitions/myservice.DefaultOutputModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/myservice.serviceError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/myservice.serviceError"
                        }
                    }
                }
            }
        },
        "/products/:id": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Продукт точки",
                "responses": {
                    "200": {
                        "description": "возвращает один продукт из точки",
                        "schema": {
                            "$ref": "#/definitions/myservice.ProductOutputModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/myservice.serviceError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/myservice.serviceError"
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Обновить продукт в точке",
                "parameters": [
                    {
                        "description": "Обновляемые поля",
                        "name": "type",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/myservice.ProductUpdateInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "возвращает пустой объект",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/myservice.serviceError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/myservice.serviceError"
                        }
                    }
                }
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Удалить продукт в точке",
                "responses": {
                    "200": {
                        "description": "возвращает пустой объект",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/myservice.serviceError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/myservice.serviceError"
                        }
                    }
                }
            }
        },
        "/pwis": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Получить список связей продуктов и ингредиентов в точке",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "product_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список связей продуктов и ингредиентов точки",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/myservice.PWIOutputModel"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/myservice.serviceError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/myservice.serviceError"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Добавить связь продукта и ингридиента в точку",
                "parameters": [
                    {
                        "description": "Принимаемый объект",
                        "name": "type",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/myservice.PWICreateInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "возвращает id созданной записи",
                        "schema": {
                            "$ref": "#/definitions/myservice.DefaultOutputModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/myservice.serviceError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/myservice.serviceError"
                        }
                    }
                }
            }
        },
        "/pwis/:id": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "summary": "Обновить связь",
                "parameters": [
                    {
                        "description": "Обновляемые поля",
                        "name": "type",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/myservice.PWIUpdateFields"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "возвращает пустой объект",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Удалить связь из точки",
                "responses": {
                    "200": {
                        "description": "пустой объект",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/myservice.serviceError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/myservice.serviceError"
                        }
                    }
                }
            }
        },
        "/sessions": {
            "get": {
                "description": "Метод позволяет получить список всех сессий точки",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Список всех сессий точки",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "in unixmilli",
                        "name": "end",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "in unixmilli",
                        "name": "start",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Возвращает массив сессий точки",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/myservice.SessionOutputModel"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/myservice.serviceError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/myservice.serviceError"
                        }
                    }
                }
            },
            "post": {
                "description": "Открывает сессию с id указанным в jwt токен.\n- Поле `action` принимает два параметра `open` (для открытия сессии) и `close` (для закрытия сессии)",
                "summary": "Открыть или закрыть сессию в точке",
                "parameters": [
                    {
                        "description": "Принимаемый объект",
                        "name": "type",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/myservice.SessionsOpenOrCloseInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "возвращает id созданной записи",
                        "schema": {
                            "$ref": "#/definitions/myservice.SessionOpenOrCloseOutput"
                        }
                    }
                }
            }
        },
        "/sessions.Last": {
            "get": {
                "description": "Метод позволяет получить последнюю сессию торговой точки (не важно, открытая или закрытая), к которой привязан jwt токен",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Последняя сессия торговой точки (к которой привязан jwt токен)",
                "responses": {
                    "200": {
                        "description": "Возвращает последнюю закрытую сессию точки продаж",
                        "schema": {
                            "$ref": "#/definitions/myservice.SessionOutputModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/myservice.serviceError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/myservice.serviceError"
                        }
                    }
                }
            }
        },
        "/sessions.Last.Closed": {
            "get": {
                "description": "Метод позволяет получить последнюю сессию торговой точки, к которой привязан jwt токен",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Последняя закрытая сессия торговой точки (к которой привязан jwt токен)",
                "responses": {
                    "200": {
                        "description": "Возвращает последнюю закрытую сессию точки продаж",
                        "schema": {
                            "$ref": "#/definitions/myservice.SessionOutputModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/myservice.serviceError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/myservice.serviceError"
                        }
                    }
                }
            }
        },
        "/sessions.Last.Me": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Последняя сессия текущего юзера (к которой привязан jwt токен)",
                "responses": {
                    "200": {
                        "description": "Возвращает последнюю сессию текущего юзера",
                        "schema": {
                            "$ref": "#/definitions/myservice.SessionOutputModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/myservice.serviceError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/myservice.serviceError"
                        }
                    }
                }
            }
        },
        "/upload.Photo": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "summary": "Загрузить фотографию на сервер",
                "parameters": [
                    {
                        "description": "фото",
                        "name": "type",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/myservice.UploadPhotoInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "возвращает ссылку на фотографию",
                        "schema": {
                            "$ref": "#/definitions/myservice.UploadPhotoOutput"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "myservice.CashChangesCreateInput": {
            "type": "object",
            "required": [
                "reason"
            ],
            "properties": {
                "comment": {
                    "type": "string"
                },
                "date": {
                    "description": "unixmilli",
                    "type": "integer"
                },
                "reason": {
                    "type": "string"
                },
                "session_id": {
                    "type": "integer"
                },
                "total": {
                    "type": "number"
                }
            }
        },
        "myservice.CashChangesOutputModel": {
            "type": "object",
            "properties": {
                "comment": {
                    "type": "string"
                },
                "date": {
                    "description": "unixmilli",
                    "type": "integer"
                },
                "employee_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "outletID": {
                    "type": "integer"
                },
                "reason": {
                    "type": "string"
                },
                "session_id": {
                    "type": "integer"
                },
                "total": {
                    "type": "number"
                }
            }
        },
        "myservice.CategoryCreateInput": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "myservice.CategoryOutputModel": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "outlet_id": {
                    "type": "integer"
                }
            }
        },
        "myservice.CategoryUpdateFieldsInput": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "myservice.DefaultOutputModel": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        },
        "myservice.EmployeeOutputModel": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "online": {
                    "type": "boolean"
                },
                "outlet_id": {
                    "type": "integer"
                },
                "role": {
                    "type": "string"
                },
                "role_id": {
                    "type": "integer"
                }
            }
        },
        "myservice.EmployeeUpdateFieldsInput": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "role_id": {
                    "type": "integer"
                }
            }
        },
        "myservice.IngredientArrivalInput": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "number"
                },
                "date": {
                    "type": "integer"
                },
                "ingredient_id": {
                    "type": "integer"
                },
                "price": {
                    "type": "number"
                },
                "write_off": {
                    "type": "boolean"
                }
            }
        },
        "myservice.IngredientCreateInput": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "count": {
                    "type": "number"
                },
                "measure_unit": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "purchase_price": {
                    "type": "number"
                }
            }
        },
        "myservice.IngredientOutputModel": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "number"
                },
                "id": {
                    "type": "integer"
                },
                "measure_unit": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "outlet_id": {
                    "type": "integer"
                },
                "purchase_price": {
                    "type": "number"
                }
            }
        },
        "myservice.IngredientUpdateInput": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "number"
                },
                "measure_unit": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "purchase_price": {
                    "type": "number"
                }
            }
        },
        "myservice.IngredientsAddingHistoryCreateInput": {
            "type": "object",
            "properties": {
                "count": {
                    "description": "кол-во продукта, который не сходится",
                    "type": "number"
                },
                "date": {
                    "description": "unixmilli",
                    "type": "integer"
                },
                "ingredient_id": {
                    "type": "integer"
                },
                "status": {
                    "description": "1 - инвенторизация",
                    "type": "integer"
                },
                "total": {
                    "description": "сумма, на которую не сходится",
                    "type": "number"
                }
            }
        },
        "myservice.IngredientsAddingHistoryOutputModel": {
            "type": "object",
            "properties": {
                "count": {
                    "description": "кол-во продукта, который не сходится",
                    "type": "number"
                },
                "date": {
                    "description": "unixmilli",
                    "type": "integer"
                },
                "employee_id": {
                    "description": "сотрудник, который делал инветаризацию",
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "ingredient_id": {
                    "type": "integer"
                },
                "outlet_id": {
                    "type": "integer"
                },
                "status": {
                    "description": "1 - инвенторизация",
                    "type": "integer"
                },
                "total": {
                    "description": "сумма, на которую не сходится",
                    "type": "number"
                }
            }
        },
        "myservice.InventoryHistoryCreateInput": {
            "type": "object",
            "properties": {
                "date": {
                    "description": "unixmilli",
                    "type": "integer"
                }
            }
        },
        "myservice.InventoryHistoryOutputModel": {
            "type": "object",
            "properties": {
                "date": {
                    "description": "unixmilli",
                    "type": "integer"
                },
                "employee_id": {
                    "description": "сотрудник, который делал инветаризацию",
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "outlet_id": {
                    "type": "integer"
                }
            }
        },
        "myservice.InventoryListCreateInput": {
            "type": "object",
            "properties": {
                "ingredient_id": {
                    "type": "integer"
                },
                "inventory_history_id": {
                    "type": "integer"
                },
                "new_count": {
                    "type": "number"
                }
            }
        },
        "myservice.InventoryListOutputModel": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "ingredient_id": {
                    "type": "integer"
                },
                "inventory_history_id": {
                    "type": "integer"
                },
                "new_count": {
                    "type": "number"
                },
                "old_count": {
                    "type": "number"
                },
                "outletID": {
                    "type": "integer"
                },
                "price": {
                    "type": "number"
                }
            }
        },
        "myservice.InvitationCreateOutput": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "myservice.InvitationGetActivatedFieldAffiliateOrg": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "outlets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/myservice.InvitationGetActivatedFieldOutlets"
                    }
                }
            }
        },
        "myservice.InvitationGetActivatedFieldOutlets": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "myservice.InvitationGetActivatedOutput": {
            "type": "object",
            "properties": {
                "affiliate_org": {
                    "$ref": "#/definitions/myservice.InvitationGetActivatedFieldAffiliateOrg"
                },
                "id": {
                    "description": "id инвайта",
                    "type": "integer"
                }
            }
        },
        "myservice.InvitationGetNotActivatedOutput": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "рандомный код (равен \"\", если активирован)",
                    "type": "string"
                },
                "expires_in": {
                    "description": "во сколько истекает инвайт(равен 0, если активирован)",
                    "type": "integer"
                },
                "id": {
                    "description": "id инвайта",
                    "type": "integer"
                }
            }
        },
        "myservice.InvitationOutputModel": {
            "type": "object",
            "properties": {
                "affiliate_org_id": {
                    "description": "приглашенная организация",
                    "type": "integer"
                },
                "code": {
                    "description": "рандомный код (равен \"\", если активирован)",
                    "type": "string"
                },
                "expires_in": {
                    "description": "во сколько истекает инвайт(равен 0, если активирован)",
                    "type": "integer"
                },
                "id": {
                    "description": "id инвайта",
                    "type": "integer"
                }
            }
        },
        "myservice.OrderInfoOutputModel": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "integer"
                },
                "employee_name": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_delete": {
                    "type": "boolean"
                },
                "outlet_id": {
                    "type": "integer"
                },
                "pay_type": {
                    "type": "integer"
                },
                "session_id": {
                    "type": "integer"
                }
            }
        },
        "myservice.OrderListCreateInput": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "order_info_id": {
                    "type": "integer"
                },
                "product_id": {
                    "type": "integer"
                },
                "product_name": {
                    "type": "string"
                },
                "product_price": {
                    "type": "number"
                },
                "session_id": {
                    "type": "integer"
                }
            }
        },
        "myservice.OrderListOutputModel": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "order_info_id": {
                    "type": "integer"
                },
                "outlet_id": {
                    "type": "integer"
                },
                "product_id": {
                    "type": "integer"
                },
                "product_name": {
                    "type": "string"
                },
                "product_price": {
                    "type": "number"
                },
                "session_id": {
                    "type": "integer"
                }
            }
        },
        "myservice.OrdersInfoCreateInput": {
            "type": "object",
            "required": [
                "employee_name"
            ],
            "properties": {
                "date": {
                    "type": "integer"
                },
                "employee_name": {
                    "type": "string"
                },
                "pay_type": {
                    "type": "integer"
                },
                "session_id": {
                    "type": "integer"
                }
            }
        },
        "myservice.OutletCreateInput": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "myservice.PWICreateInput": {
            "type": "object",
            "properties": {
                "count_take_for_sell": {
                    "type": "number"
                },
                "ingredient_id": {
                    "type": "integer"
                },
                "product_id": {
                    "type": "integer"
                }
            }
        },
        "myservice.PWIOutputModel": {
            "type": "object",
            "properties": {
                "count_take_for_sell": {
                    "type": "number"
                },
                "id": {
                    "type": "integer"
                },
                "ingredient_id": {
                    "type": "integer"
                },
                "outlet_id": {
                    "type": "integer"
                },
                "product_id": {
                    "type": "integer"
                }
            }
        },
        "myservice.PWIUpdateFields": {
            "type": "object",
            "properties": {
                "count_take_for_sell": {
                    "type": "number"
                },
                "product_id": {
                    "type": "integer"
                }
            }
        },
        "myservice.ProductCreateInput": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "barcode": {
                    "type": "integer"
                },
                "category_id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "photo_id": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "product_name_kkt": {
                    "type": "string"
                },
                "seller_percent": {
                    "type": "number"
                }
            }
        },
        "myservice.ProductOutputModel": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "barcode": {
                    "type": "integer"
                },
                "category_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "outlet_id": {
                    "type": "integer"
                },
                "photo": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "product_name_kkt": {
                    "type": "string"
                },
                "seller_percent": {
                    "type": "number"
                }
            }
        },
        "myservice.ProductUpdateInput": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "barcode": {
                    "type": "integer"
                },
                "category_id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "photo_id": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "product_name_kkt": {
                    "type": "string"
                },
                "seller_percent": {
                    "type": "number"
                }
            }
        },
        "myservice.SessionOpenOrCloseOutput": {
            "type": "object",
            "properties": {
                "employee_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "myservice.SessionOutputModel": {
            "type": "object",
            "properties": {
                "bank_earned": {
                    "type": "number"
                },
                "cash_close": {
                    "type": "number"
                },
                "cash_earned": {
                    "type": "number"
                },
                "cash_open": {
                    "type": "number"
                },
                "date_close": {
                    "description": "unixmilli",
                    "type": "integer"
                },
                "date_open": {
                    "description": "unixmilli",
                    "type": "integer"
                },
                "employee_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "number_of_receipts": {
                    "type": "integer"
                },
                "outlet_id": {
                    "type": "integer"
                }
            }
        },
        "myservice.SessionsOpenOrCloseInput": {
            "type": "object",
            "required": [
                "action"
            ],
            "properties": {
                "action": {
                    "description": "\"open\" or \"close\"",
                    "type": "string"
                },
                "bank_earned": {
                    "type": "number"
                },
                "cash": {
                    "type": "number"
                },
                "cash_earned": {
                    "type": "number"
                },
                "date": {
                    "type": "integer"
                }
            }
        },
        "myservice.SignInEmployeeInput": {
            "type": "object",
            "required": [
                "password"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "myservice.SignInEmployeeOutput": {
            "type": "object",
            "properties": {
                "affiliate": {
                    "description": "является ли организация филиалом",
                    "type": "boolean"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "myservice.SignInOrgInput": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "myservice.SignInOrgOutput": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "myservice.SignUpEmployeeInput": {
            "type": "object",
            "required": [
                "name",
                "password"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "role_id": {
                    "type": "integer"
                }
            }
        },
        "myservice.SignUpOrgInput": {
            "type": "object",
            "required": [
                "email",
                "name",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "invite_code": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "myservice.UploadPhotoInput": {
            "type": "object",
            "properties": {
                "photo": {
                    "type": "string"
                }
            }
        },
        "myservice.UploadPhotoOutput": {
            "type": "object",
            "properties": {
                "photo_id": {
                    "type": "string"
                },
                "photo_uri": {
                    "type": "string"
                }
            }
        },
        "myservice.outletOutputModel": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "myservice.serviceError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "error": {
                    "type": "string"
                }
            }
        }
    }
}